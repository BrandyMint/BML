// http://clarkdave.net/2015/01/how-to-use-webpack-with-rails/

import path from 'path';
import webpack from 'webpack';
import StatsPlugin from 'stats-webpack-plugin';

import loaders from './loaders';

// must match config.webpack.dev_server.port
const devServerPort = 3004;

const root = path.join(__dirname, '..', 'app/assets/javascripts/');
const outputPath = path.join(__dirname, '..', '..', 'public', 'assets');

console.log(outputPath);

export default {
  entry: {
    'vendors':     './app/assets/javascripts/vendor.js',
    'application': './app/assets/javascripts/application.js',
  },

  output: {
    // publicPath: '//localhost:' + devServerPort + '/webpack/',
    // Build assets directly in to public/webpack/, let webpack know
    // that all webpacked assets start with webpack/

    // must match config.webpack.output_dir
    path: outputPath,
    publicPath: '/assets/',

    // In Chrome, by default the source map generated by webpack will put everything in a 'pseudo pathâ€™, webpack:/
    devtoolModuleFilenameTemplate: '[resourcePath]',
    devtoolFallbackModuleFilenameTemplate: '[resourcePath]?[hash]',

    // filename: '[name]-bundle-[hash].js',
    filename: '[name].js',
  },

  module: {
    //preLoaders: [
    //{
    //test: /\.jsx?$/,
    //loader: "eslint-loader",
    //exclude: /node_modules|vendor\/components/,
    //},
    //],
    loaders: loaders,
  },

  resolve: {
    root: root,
    modulesDirectories: ["web_modules", "node_modules", "vendor/components"],
    extensions: ['', '.js', '.jsx', '.coffee'],
  },

  // development
  //
  debug: true,
  displayErrorDetails: true,
  outputPathinfo: true,
  devtool: 'cheap-module-eval-source-map',

  plugins: [
    new webpack.ProvidePlugin({
      $: 'jquery',
      jQuery: 'jquery',
    }),
    new webpack.HotModuleReplacementPlugin(),
    new webpack.ResolverPlugin([
      new webpack.ResolverPlugin.DirectoryDescriptionFilePlugin('.bower.json', ['main'])
    ]),
    new webpack.DefinePlugin({
      // __VERSION__: `"${VERSION}"`,
      __CLIENT__: true,
      __SERVER__: false,
      __FAKE_API__: false,
      __ENV__: '"development"',
    }),
    // must match config.webpack.manifest_filename
    new StatsPlugin('manifest.json', {
      // We only need assetsByChunkName
      chunkModules: false,
      source: false,
      chunks: false,
      modules: false,
      assets: true
    })],


    devServer: {
      port: devServerPort,
      headers: { 'Access-Control-Allow-Origin': '*' }
    },
};
